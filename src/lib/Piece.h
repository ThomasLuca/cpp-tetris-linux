#pragma once

namespace Tetris
{
    class Piece
    {
    private:
        bool pieces[7][4][4][4] =
        {    
            {   // Z-piece
                {{0, 0, 0, 0},
                 {1, 1, 0, 0},
                 {0, 1, 1, 0},
                 {0, 0, 0, 0}},

                {{0, 1, 0, 0},
                 {1, 1, 0, 0},
                 {1, 0, 0, 0},
                 {0, 0, 0, 0}},

                {{0, 0, 0, 0},
                 {1, 1, 0, 0},
                 {0, 1, 1, 0},
                 {0, 0, 0, 0}},

                {{0, 1, 0, 0},
                 {1, 1, 0, 0},
                 {1, 0, 0, 0},
                 {0, 0, 0, 0}}
            },{ // S-piece
                {{0, 0, 0, 0},
                 {0, 1, 1, 0},
                 {1, 1, 0, 0},
                 {0, 0, 0, 0}},

                {{1, 0, 0, 0},
                 {1, 1, 0, 0},
                 {0, 1, 0, 0},
                 {0, 0, 0, 0}},

                {{0, 0, 0, 0},
                 {0, 1, 1, 0},
                 {1, 1, 0, 0},
                 {0, 0, 0, 0}},

                {{1, 0, 0, 0},
                 {1, 1, 0, 0},
                 {0, 1, 0, 0},
                 {0, 0, 0, 0}}
            },{ // T-piece
                {{0, 1, 0, 0},
                 {1, 1, 1, 0},
                 {0, 0, 0, 0},
                 {0, 0, 0, 0}},

                {{1, 0, 0, 0},
                 {1, 1, 0, 0},
                 {1, 0, 0, 0},
                 {0, 0, 0, 0}},

                {{0, 0, 0, 0},
                 {1, 1, 1, 0},
                 {0, 1, 0, 0},
                 {0, 0, 0, 0}},

                {{0, 1, 0, 0},
                 {1, 1, 0, 0},
                 {0, 1, 0, 0},
                 {0, 0, 0, 0}}
            },{ // L-rev-piece
                {{1, 0, 0, 0},
                 {1, 1, 1, 0},
                 {0, 0, 0, 0},
                 {0, 0, 0, 0}},

                {{0, 1, 1, 0},
                 {0, 1, 0, 0},
                 {0, 1, 0, 0},
                 {0, 0, 0, 0}},

                {{0, 0, 0, 0},
                 {1, 1, 1, 0},
                 {0, 0, 1, 0},
                 {0, 0, 0, 0}},

                {{0, 1, 0, 0},
                 {0, 1, 0, 0},
                 {1, 1, 0, 0},
                 {0, 0, 0, 0}}
            },{ // L-piece
                {{0, 0, 1, 0},
                 {1, 1, 1, 0},
                 {0, 0, 0, 0},
                 {0, 0, 0, 0}},

                {{0, 1, 0, 0},
                 {0, 1, 0, 0},
                 {0, 1, 1, 0},
                 {0, 0, 0, 0}},

                {{0, 0, 0, 0},
                 {1, 1, 1, 0},
                 {1, 0, 0, 0},
                 {0, 0, 0, 0}},

                {{1, 1, 0, 0},
                 {0, 1, 0, 0},
                 {0, 1, 0, 0},
                 {0, 0, 0, 0}}
            },{ // Square-piece
                {{1, 1, 0, 0},
                 {1, 1, 0, 0},
                 {0, 0, 0, 0},
                 {0, 0, 0, 0}},

                {{1, 1, 0, 0},
                 {1, 1, 0, 0},
                 {0, 0, 0, 0},
                 {0, 0, 0, 0}},

                {{1, 1, 0, 0},
                 {1, 1, 0, 0},
                 {0, 0, 0, 0},
                 {0, 0, 0, 0}},

                {{1, 1, 0, 0},
                 {1, 1, 0, 0},
                 {0, 0, 0, 0},
                 {0, 0, 0, 0}}
            },{ // |-piece
                {{0, 0, 0, 0},
                 {0, 0, 0, 0},
                 {1, 1, 1, 1},
                 {0, 0, 0, 0}},

                {{0, 0, 1, 0},
                 {0, 0, 1, 0},
                 {0, 0, 1, 0},
                 {0, 0, 1, 0}},

                {{0, 0, 0, 0},
                 {0, 0, 0, 0},
                 {1, 1, 1, 1},
                 {0, 0, 0, 0}},

                {{0, 0, 1, 0},
                 {0, 0, 1, 0},
                 {0, 0, 1, 0},
                 {0, 0, 1, 0}}
            }
        };

    public:
        bool getBlockOfPiece(int piece, int rotation, int xPosition, int yPosition);
        // Piece(/* args */);
        // ~Piece();
    };

    // Piece::Piece(/* args */)
    // {
    // }

    // Piece::~Piece()
    // {
    // }

}; // namespace Tetris